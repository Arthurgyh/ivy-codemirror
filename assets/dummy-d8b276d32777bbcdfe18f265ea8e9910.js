define("dummy/app",["exports","ember","ember/resolver","ember/load-initializers","dummy/config/environment"],function(e,t,n,r,i){"use strict";var a;t["default"].MODEL_FACTORY_INJECTIONS=!0,a=t["default"].Application.extend({modulePrefix:i["default"].modulePrefix,podModulePrefix:i["default"].podModulePrefix,Resolver:n["default"]}),r["default"](a,i["default"].modulePrefix),e["default"]=a}),define("dummy/components/ivy-codemirror",["exports","ivy-codemirror/components/ivy-codemirror"],function(e,t){"use strict";e["default"]=t["default"]}),define("dummy/controllers/index",["exports","ember","dummy/config/environment"],function(e,t,n){"use strict";e["default"]=t["default"].Controller.extend({lineNumbers:!0,lineWrapping:!1,mode:"javascript",readOnly:!1,smartIndent:!0,tabSize:4,theme:"ambiance",value:n["default"].APP.codeSample,modes:t["default"].A(["apl","asterisk","clike","clojure","cobol","coffeescript","commonlisp","css","cypher","d","diff","django","dtd","dylan","ecl","eiffel","erlang","fortran","gas","gfm","gherkin","go","groovy","haml","haskell","haxe","htmlembedded","htmlmixed","http","idl","jade","javascript","jinja2","julia","kotlin","livescript","lua","markdown","mirc","mllike","modelica","nginx","ntriples","octave","pascal","pegjs","perl","php","pig","properties","puppet","python","q","r","rpm","rst","ruby","rust","sass","scheme","shell","sieve","slim","smalltalk","smarty","smartymixed","solr","sparql","sql","stex","tcl","textile","tiddlywiki","tiki","toml","tornado","turtle","vb","vbscript","velocity","verilog","xml","xquery","yaml","z80"]),themes:t["default"].A(["3024-day","3024-night","ambiance-mobile","ambiance","base16-dark","base16-light","blackboard","cobalt","eclipse","elegant","erlang-dark","lesser-dark","mbo","mdn-like","midnight","monokai","neat","neo","night","paraiso-dark","paraiso-light","pastel-on-dark","rubyblue","solarized","the-matrix","tomorrow-night-eighties","twilight","vibrant-ink","xq-dark","xq-light"])})}),define("dummy/initializers/app-version",["exports","dummy/config/environment","ember"],function(e,t,n){"use strict";var r=n["default"].String.classify,i=!1;e["default"]={name:"App Version",initialize:function(e,a){if(!i){var d=r(a.toString());n["default"].libraries.register(d,t["default"].APP.version),i=!0}}}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){"use strict";function r(e,r){var i=t["default"].String.classify(n["default"].modulePrefix);n["default"].exportApplicationGlobal&&!window[i]&&(window[i]=r)}e.initialize=r,e["default"]={name:"export-application-global",initialize:r}}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){"use strict";var r=t["default"].Router.extend({location:n["default"].locationType});e["default"]=r.map(function(){})}),define("dummy/templates/application",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){return{isHTMLBars:!0,revision:"Ember@1.11.1",blockParams:0,cachedFragment:null,hasRendered:!1,build:function(e){var t=e.createDocumentFragment(),n=e.createElement("div");e.setAttribute(n,"class","container");var r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createComment("");e.appendChild(n,r);var r=e.createTextNode("\n");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},render:function(e,t,n){var r=t.dom,i=t.hooks,a=i.content;r.detectNamespace(n);var d;t.useFragmentCache&&r.canClone?(null===this.cachedFragment&&(d=this.build(r),this.hasRendered?this.cachedFragment=d:this.hasRendered=!0),this.cachedFragment&&(d=r.cloneNode(this.cachedFragment,!0))):d=this.build(r);var o=r.createMorphAt(r.childAt(d,[0]),1,1);return a(t,o,e,"outlet"),d}}}())}),define("dummy/templates/index",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){return{isHTMLBars:!0,revision:"Ember@1.11.1",blockParams:0,cachedFragment:null,hasRendered:!1,build:function(e){var t=e.createDocumentFragment(),n=e.createElement("h1");e.setAttribute(n,"class","page-header");var r=e.createTextNode("ivy-codemirror");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createElement("div");e.setAttribute(n,"class","row");var r=e.createTextNode("\n  ");e.appendChild(n,r);var r=e.createElement("div");e.setAttribute(r,"class","col-sm-9");var i=e.createTextNode("\n    ");e.appendChild(r,i);var i=e.createComment("");e.appendChild(r,i);var i=e.createTextNode("\n  ");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n\n  ");e.appendChild(n,r);var r=e.createElement("div");e.setAttribute(r,"class","col-sm-3");var i=e.createTextNode("\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","form-group");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label");e.setAttribute(a,"class","control-label"),e.setAttribute(a,"for","mode");var d=e.createTextNode("Mode");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createComment("");e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","form-group");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label");e.setAttribute(a,"class","control-label"),e.setAttribute(a,"for","theme");var d=e.createTextNode("Theme");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createComment("");e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","checkbox");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label"),d=e.createTextNode("\n        ");e.appendChild(a,d);var d=e.createComment("");e.appendChild(a,d);var d=e.createTextNode(" Line numbers\n      ");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","checkbox");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label"),d=e.createTextNode("\n        ");e.appendChild(a,d);var d=e.createComment("");e.appendChild(a,d);var d=e.createTextNode(" Line wrapping\n      ");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","checkbox");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label"),d=e.createTextNode("\n        ");e.appendChild(a,d);var d=e.createComment("");e.appendChild(a,d);var d=e.createTextNode(" Read-only\n      ");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n\n    ");e.appendChild(r,i);var i=e.createElement("div");e.setAttribute(i,"class","checkbox");var a=e.createTextNode("\n      ");e.appendChild(i,a);var a=e.createElement("label"),d=e.createTextNode("\n        ");e.appendChild(a,d);var d=e.createComment("");e.appendChild(a,d);var d=e.createTextNode(" Smart indent\n      ");e.appendChild(a,d),e.appendChild(i,a);var a=e.createTextNode("\n    ");e.appendChild(i,a),e.appendChild(r,i);var i=e.createTextNode("\n  ");e.appendChild(r,i),e.appendChild(n,r);var r=e.createTextNode("\n");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},render:function(e,t,n){var r=t.dom,i=t.hooks,a=i.get,d=i.inline;r.detectNamespace(n);var o;t.useFragmentCache&&r.canClone?(null===this.cachedFragment&&(o=this.build(r),this.hasRendered?this.cachedFragment=o:this.hasRendered=!0),this.cachedFragment&&(o=r.cloneNode(this.cachedFragment,!0))):o=this.build(r);var l=r.childAt(o,[2]),c=r.childAt(l,[3]),s=r.createMorphAt(r.childAt(l,[1]),1,1),p=r.createMorphAt(r.childAt(c,[1]),3,3),h=r.createMorphAt(r.childAt(c,[3]),3,3),m=r.createMorphAt(r.childAt(c,[5,1]),1,1),u=r.createMorphAt(r.childAt(c,[7,1]),1,1),v=r.createMorphAt(r.childAt(c,[9,1]),1,1),b=r.createMorphAt(r.childAt(c,[11,1]),1,1);return d(t,s,e,"ivy-codemirror",[],{lineNumbers:a(t,e,"lineNumbers"),lineWrapping:a(t,e,"lineWrapping"),mode:a(t,e,"mode"),readOnly:a(t,e,"readOnly"),smartIndent:a(t,e,"smartIndent"),theme:a(t,e,"theme"),value:a(t,e,"value")}),d(t,p,e,"view",["select"],{"class":"form-control",content:a(t,e,"modes"),id:"mode",value:a(t,e,"mode")}),d(t,h,e,"view",["select"],{"class":"form-control",content:a(t,e,"themes"),id:"theme",value:a(t,e,"theme")}),d(t,m,e,"input",[],{checked:a(t,e,"lineNumbers"),type:"checkbox"}),d(t,u,e,"input",[],{checked:a(t,e,"lineWrapping"),type:"checkbox"}),d(t,v,e,"input",[],{checked:a(t,e,"readOnly"),type:"checkbox"}),d(t,b,e,"input",[],{checked:a(t,e,"smartIndent"),type:"checkbox"}),o}}}())}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",r=e["default"].$('meta[name="'+n+'"]').attr("content"),i=JSON.parse(unescape(r));return{"default":i}}catch(a){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({codeSample:"import CodeMirror from 'codemirror';\nimport Ember from 'ember';\n\nexport default Ember.Component.extend({\n  /**\n   * The value of the editor.\n   *\n   * @property value\n   * @type {String}\n   * @default null\n   */\n  value: null,\n\n  autofocus: false,\n  coverGutterNextToScrollbar: false,\n  electricChars: true,\n  extraKeys: null,\n  firstLineNumber: 1,\n  fixedGutter: true,\n  historyEventDelay: 1250,\n  indentUnit: 2,\n  indentWithTabs: false,\n  keyMap: 'default',\n  lineNumbers: false,\n  lineWrapping: false,\n  mode: null,\n  readOnly: false,\n  rtlMoveVisually: true,\n  showCursorWhenSelecting: false,\n  smartIndent: true,\n  tabSize: 4,\n  tabindex: null,\n  theme: 'default',\n  undoDepth: 200,\n\n  tagName: 'textarea',\n\n  /**\n   * Force CodeMirror to refresh.\n   *\n   * @method refresh\n   */\n  refresh: function() {\n    this.get('codeMirror').refresh();\n  },\n\n  _initCodemirror: Ember.on('didInsertElement', function() {\n    var codeMirror = CodeMirror.fromTextArea(this.get('element'));\n\n    // Stash away the CodeMirror instance.\n    this.set('codeMirror', codeMirror);\n\n    // Set up handlers for CodeMirror events.\n    this._bindCodeMirrorEvent('change', this, '_updateValue');\n\n    // Set up bindings for CodeMirror options.\n    this._bindCodeMirrorOption('autofocus');\n    this._bindCodeMirrorOption('coverGutterNextToScrollbar');\n    this._bindCodeMirrorOption('electricChars');\n    this._bindCodeMirrorOption('extraKeys');\n    this._bindCodeMirrorOption('firstLineNumber');\n    this._bindCodeMirrorOption('fixedGutter');\n    this._bindCodeMirrorOption('historyEventDelay');\n    this._bindCodeMirrorOption('indentUnit');\n    this._bindCodeMirrorOption('indentWithTabs');\n    this._bindCodeMirrorOption('keyMap');\n    this._bindCodeMirrorOption('lineNumbers');\n    this._bindCodeMirrorOption('lineWrapping');\n    this._bindCodeMirrorOption('mode');\n    this._bindCodeMirrorOption('readOnly');\n    this._bindCodeMirrorOption('rtlMoveVisually');\n    this._bindCodeMirrorOption('showCursorWhenSelecting');\n    this._bindCodeMirrorOption('smartIndent');\n    this._bindCodeMirrorOption('tabSize');\n    this._bindCodeMirrorOption('tabindex');\n    this._bindCodeMirrorOption('theme');\n    this._bindCodeMirrorOption('undoDepth');\n\n    this._bindCodeMirrorProperty('value', this, '_valueDidChange');\n    this._valueDidChange();\n\n    // Force a refresh on `becameVisible`, since CodeMirror won't render itself\n    // onto a hidden element.\n    this.on('becameVisible', this, 'refresh');\n  }),\n\n  /**\n   * Bind a handler for `event`, to be torn down in `willDestroyElement`.\n   *\n   * @private\n   * @method _bindCodeMirrorEvent\n   */\n  _bindCodeMirrorEvent: function(event, target, method) {\n    var callback = Ember.run.bind(target, method);\n\n    this.get('codeMirror').on(event, callback);\n\n    this.on('willDestroyElement', this, function() {\n      this.get('codeMirror').off(event, callback);\n    });\n  },\n\n  /**\n   * @private\n   * @method _bindCodeMirrorProperty\n   */\n  _bindCodeMirrorOption: function(key) {\n    this._bindCodeMirrorProperty(key, this, '_optionDidChange');\n\n    // Set the initial option synchronously.\n    this._optionDidChange(this, key);\n  },\n\n  /**\n   * Bind an observer on `key`, to be torn down in `willDestroyElement`.\n   *\n   * @private\n   * @method _bindCodeMirrorProperty\n   */\n  _bindCodeMirrorProperty: function(key, target, method) {\n    this.addObserver(key, target, method);\n\n    this.on('willDestroyElement', this, function() {\n      this.removeObserver(key, target, method);\n    });\n  },\n\n  /**\n   * Sync a local option value with CodeMirror.\n   *\n   * @private\n   * @method _optionDidChange\n   */\n  _optionDidChange: function(sender, key) {\n    this.get('codeMirror').setOption(key, this.get(key));\n  },\n\n  /**\n   * Update the `value` property when a CodeMirror `change` event occurs.\n   *\n   * @private\n   * @method _updateValue\n   */\n  _updateValue: function(instance) {\n    this.set('value', instance.getValue());\n  },\n\n  _valueDidChange: function() {\n    var codeMirror = this.get('codeMirror'),\n        value = this.get('value');\n\n    if (value !== codeMirror.getValue()) {\n      codeMirror.setValue(value || '');\n    }\n  }\n});\n",name:"ivy-codemirror",version:"1.1.0-beta.2+canary.3e9e9270"});